trigger:
- main

pool:
  VmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'  # Configura la versión de build (Debug, Release, etc.)
  pythonVersion: '3.12'  # Especifica la versión de Python a utilizar

steps:

- script: |
    flask --app app --version
  displayName: 'Verificar instalación de Flask'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copiar archivos de salida'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
  displayName: 'Publicar artefactos'

- task: AzureWebApp@1
  inputs:
        azureSubscription: 'Test(d0af34f1-2d64-40d1-aa0e-9712f463b918)'
        appType: 'webAppLinux'
        appName: 'test-smart-talent'
        package: '$(build.DefaultWorkingDirectory)/**/*.zip'
        runtimeStack: 'PYTHON|3.12'
        startUpCommand: 'flask run'

